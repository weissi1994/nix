stages:
  - check
  - build
  - deploy

default:
  tags:
    - nix

check-flake:
  stage: check
  script:
    - export NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1
    - export NIXPKGS_ALLOW_UNFREE=1
    - nix flake check --impure --all-systems

iso:
  stage: build
  rules:
    - if: "$CI_COMMIT_TAG"
      when: on_success
    - changes:
        - flake.lock
        - flake.nix
        - .gitlab-ci.yml
      when: on_success
      allow_failure: true
    - when: never
  parallel:
    matrix:
      - HOST:
          # - generic
          - installer-sway
          - installer-pantheon
  script:
    - export ARTIFACT_NAME="${CI_PROJECT_NAME}-${HOST}-${CI_COMMIT_REF_SLUG}.iso"
    - nix --accept-flake-config build ".#nixosConfigurations.$HOST.config.system.build.isoImage"
    - cp -L result $ARTIFACT_NAME
  artifacts:
    paths:
      - ./*.iso

netboot:
  stage: deploy
  needs:
    - job: iso
      artifacts: true
  rules:
    - if: "$CI_COMMIT_TAG"
      when: on_success
    - changes:
        - flake.lock
        - flake.nix
        - .gitlab-ci.yml
      when: on_success
      allow_failure: true
    - when: never
  parallel:
    matrix:
      - HOST:
          - installer-sway
          - installer-pantheon
  script:
    - export ARTIFACT_NAME="${CI_PROJECT_NAME}-${HOST}-${CI_COMMIT_REF_SLUG}.iso"
    - 7z x "${ARTIFACT_NAME}" -o/srv/netboot/assets/nixos/$HOST/

deploy:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual
    - changes:
        - flake.lock
        - flake.nix
        - .gitlab-ci.yml
      when: manual
      allow_failure: true
    - when: never
  parallel:
    matrix:
      - HOST:
          - terro
          - bean
  script:
    - nixos-rebuild --flake ".#${HOST}" --target-host "ion@${HOST}" --use-remote-sudo
